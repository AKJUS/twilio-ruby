##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /
#
# frozen_string_literal: true

require 'spec_helper.rb'

describe 'UseCase' do
  it "can read" do
    @holodeck.mock(Twilio::Response.new(500, ''))

    expect {
      @client.messaging.v1.use_cases.list()
    }.to raise_exception(Twilio::REST::TwilioError)

    expect(
    @holodeck.has_request?(Holodeck::Request.new(
        method: 'get',
        url: 'https://messaging.twilio.com/v1/a2p/UseCases',
    ))).to eq(true)
  end

  it "receives read responses" do
    @holodeck.mock(Twilio::Response.new(
        200,
      %q[
      {
          "meta": {
              "page": 0,
              "page_size": 50,
              "first_page_url": "https://messaging.twilio.com/v1/a2p/UseCases?PageSize=50&Page=0",
              "previous_page_url": null,
              "next_page_url": null,
              "key": "data",
              "url": "https://messaging.twilio.com/v1/a2p/UseCases?PageSize=50&Page=0"
          },
          "data": [
              {
                  "code": "HIGHER_EDUCATION",
                  "name": "Higher Education",
                  "description": "Higher Education: For campaigns created on behalf of Colleges or Universities"
              }
          ]
      }
      ]
    ))

    actual = @client.messaging.v1.use_cases.list()

    expect(actual).to_not eq(nil)
  end
end